{"version":3,"sources":["app/_shared/constants/namingObject.js","app/_shared/constants/query.js","app/dashboard/components/Listing/index.jsx","app/dashboard/components/CompareList/List.jsx","app/dashboard/components/CompareList/index.jsx","app/_shared/components/Model/index.jsx","app/routes.js","app/dashboard/index.jsx","app/_shared/components/Header/index.jsx","app/_shared/components/ErrorBoundries/index.jsx","app/_shared/components/ErrorPages/index.jsx","app/app.jsx","serviceWorker.js","index.js"],"names":["namingObject","TableHeader","name","type","match","inningBatted","notOut","runs","hundreds","fifties","fours","sixes","Quering","GET_CAREER","gql","_templateObject","CREATE_CAREER","_templateObject2","TableList","_ref","careers","headers","handleChange","players","comparable","career","header","Object","values","map","heading","react_default","a","createElement","key","allTr","player","i","keys","onChange","Table","striped","bordered","hover","data-test","defaultProps","List","Naming","data","style","padding","Fragment","Col","align","prototype","PropTypes","CompareList","list","CompareList_List","Row","Example","children","flag","onClick","_useState","useState","_useState2","slicedToArray","show","setShow","handleClose","console","log","paddingBottom","Button","variant","Modal","onHide","Header","closeButton","Title","Body","Footer","DefaultRoutes","path","component","Dashboard","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","compare","count","formInput","bind","assertThisInitialized","onLoad","submit","_this2","required","forEach","field","push","length","alert","concat","event","target","value","setState","setTimeout","window","location","reload","_id","objectSpread","_this3","compareListing","components_CompareList","form","Form","Group","controlId","Label","Control","placeholder","Container","className","react_components_esm","mutation","saveUser","Model","modelFlag","onSubmit","preventDefault","variables","query","_ref2","loading","error","Error","Listing","React","Component","authRequire","exact","text","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","ErrorBoundary","hasError","info","Error404","class","data-count","color","client","ApolloClient","uri","App","conditionalRoutes","react_router","ErrorBoundries_ErrorBoundary","react_common_esm","components_Header","react_router_dom","Boolean","hostname","ReactDOM","render","app","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f6612607.chunk.js","sourcesContent":["const TableHeader = {\n  name: \"Name\",\n  type: \"Type\",\n  match: \"Total Match\",\n  inningBatted: \"Inning Batted\",\n  notOut: \"Not Out\",\n  runs: \"Runs\",\n  hundreds: \"Hundreds\",\n  fifties: \"fifties\",\n  fours: \"fours\",\n  sixes: \"sixes\"\n};\nexport default {\n  TableHeader: TableHeader\n};","import gql from \"graphql-tag\";\nconst GET_CAREER = gql `\nquery getAllCareer($_id: String) {\n  career(_id: $_id) {\n      career {\n        name\n        type\n        match\n        inningBatted\n        notOut\n        runs\n        hundreds\n        fifties\n        fours\n        sixes\n        _id\n      }\n    error {\n      code\n      error\n    }\n  }\n}\n`;\n\nconst CREATE_CAREER = gql `\nmutation saveUser($name: String!, $type: String!, $match: String, $inningBatted: String, $hundreds: String, $fifties: String,$fours: String, $sixes: String) {\n  createCareer(name: $name, type: $type, match: $match, inningBatted: $inningBatted, hundreds: $hundreds, fifties: $fifties, fours: $fours, sixes: $sixes) {\n    name\n    type\n    match\n    inningBatted\n  }\n}\n`\nexport const Quering = {\n  GET_CAREER: GET_CAREER,\n  CREATE_CAREER\n};","import React from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\n\nfunction TableList({ careers, headers, handleChange, comparable }) {\n  let players = careers.career;\n  let header = Object.values(headers).map(heading => (\n    <td key={heading}>{heading}</td>\n  ));\n  // let compareButton = comparable > 1 ? <Button>Compare</Button> : \"\";\n  let allTr = players.map((player, i) => {\n    return (\n      <tr key={i}>\n        {Object.keys(headers).map(key => (\n          <td key={key}>{player[key] ? player[key] : \"N/A\"}</td>\n        ))}\n        <td>\n          <input type=\"checkbox\" onChange={() => handleChange(player)} />\n        </td>\n      </tr>\n    );\n  });\n\n  return (\n    <Table striped bordered hover data-test=\"Listing\">\n      <thead>\n        <tr>\n          {header}\n          <td>action</td>\n        </tr>\n      </thead>\n      <tbody>{allTr}</tbody>\n    </Table>\n  );\n}\nTableList.defaultProps = {\n  // onHandleChange:\n};\nTableList.propTypes = {\n  // onHandleChange: PropTypes.func.isRequired\n  players: PropTypes.array\n};\n\nexport default TableList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Naming } from \"../../../_shared/constants\";\n\nimport { Col, Table } from \"react-bootstrap\";\n// console.log(\"Naming.TableHeaders\", Naming.TableHeader);\nfunction List({ career }) {\n  let players = Object.keys(Naming.TableHeader).map(data => (\n    <tr style={{ padding: \"5px\" }}>\n      <td>{career[data] ? career[data] : \"N/A\"}</td>\n    </tr>\n  ));\n  return (\n    <>\n      <Col>\n        <Table striped bordered hover>\n          <thead style={{ align: \"center\" }}>{players}</thead>\n        </Table>\n      </Col>\n    </>\n  );\n}\n// JobCard.defaultProps = {\n//   job: []\n// };\nList.prototype = {\n  career: PropTypes.Object\n};\nexport default List;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport List from \"./List\";\nimport { Naming } from \"../../../_shared/constants\";\n\nimport { Row, Col, Table } from \"react-bootstrap\";\n\nfunction CompareList({ careers }) {\n  let list = Object.keys(careers).map(career => (\n    <List career={careers[career]} />\n  ));\n  return (\n    <Row data-test=\"compare-obj\">\n      <Col>\n        <Table striped bordered hover>\n          {Object.values(Naming.TableHeader).map(heading => (\n            <thead>\n              <tr>\n                <td>{heading}</td>\n              </tr>\n            </thead>\n          ))}\n        </Table>\n      </Col>\n\n      {list}\n    </Row>\n  );\n}\n// JobCard.defaultProps = {\n//   job: []\n// };\nCompareList.prototype = {\n  careers: PropTypes.Object\n};\nexport default CompareList;\n","import React, { useState } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nfunction Example({ children, onClick, flag }) {\n  const [show, setShow] = useState(flag);\n  const handleClose = () => setShow(flag);\n  const handleShow = () => setShow(!flag);\n  console.log(\"model is called\", flag);\n  return (\n    <>\n      <div style={{ paddingBottom: \"10px\" }}>\n        <Button variant=\"primary\" onClick={handleShow}>\n          Create Player\n        </Button>\n      </div>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Create Player</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{children}</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default Example;\n","import MainComponent from \"./dashboard\"\n\n// just a example you import all component and assined to each routes\nexport const DefaultRoutes = [{\n  path: \"/\",\n  component: MainComponent,\n  authRequire: true,\n  exact: true\n}];\n// export default {\n//   DefaultRoutes\n// }","import React from \"react\";\nimport { Container, Button, Form } from \"react-bootstrap\";\nimport { Quering, Naming } from \"../_shared/constants\";\nimport { Query, Mutation } from \"@apollo/react-components\";\nimport { TableList } from \"./components\";\nimport { CompareList } from \"./components\";\nimport Model from \"../_shared/components/Model\";\n\nexport default class Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { compare: {}, count: 0, formInput: {} };\n    this.handleChange = this.handleChange.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onLoad = this.onLoad.bind(this);\n  }\n\n  onClick(submit) {\n    let required = [];\n    Object.keys(Naming.TableHeader).forEach(field => {\n      if (!this.state.formInput[field]) required.push(field);\n    });\n    if (required.length > 0) {\n      alert(`${required} need to fill before submit.`);\n      return;\n    }\n  }\n  onChange(event) {\n    let state = this.state;\n    state.formInput[event.target.name] = event.target.value;\n    this.setState(state);\n  }\n\n  onLoad() {\n    setTimeout(() => window.location.reload(), 1000);\n  }\n  // add data in object so get it easily and delete it also O(1)\n  handleChange(event) {\n    let state = this.state;\n    if (state.compare[event._id]) {\n      delete state.compare[event._id];\n      state.count--;\n    } else {\n      state.compare[event._id] = event;\n      state.count++;\n    }\n    this.setState({ ...state });\n  }\n\n  render() {\n    let compareListing =\n      this.state.count > 1 ? (\n        <CompareList careers={this.state.compare} />\n      ) : (\n        \"No data select to compare, atleast select 2 playes to compare.\"\n      );\n    let form = Object.keys(Naming.TableHeader).map(field => (\n      <Form.Group controlId=\"formBasicEmail\" key={field}>\n        <Form.Label>{Naming.TableHeader[field]}</Form.Label>\n        <Form.Control\n          type=\"text\"\n          name={field}\n          onChange={this.onChange}\n          placeholder={Naming.TableHeader[field]}\n        />\n      </Form.Group>\n    ));\n    return (\n      <Container className=\"dashboard-container\">\n        <Mutation mutation={Quering.CREATE_CAREER}>\n          {(saveUser, { data }) => {\n            return (\n              <Model onClick={this.onClick} flag={this.state.modelFlag}>\n                <Form\n                  onSubmit={event => {\n                    event.preventDefault();\n                    saveUser({ variables: { ...this.state.formInput } });\n                    this.onLoad();\n                  }}\n                >\n                  {form}\n                  <Button type=\"submit\">Save</Button>\n                </Form>\n              </Model>\n            );\n          }}\n        </Mutation>\n\n        <Query query={Quering.GET_CAREER}>\n          {({ loading, error, data }) => {\n            if (error) throw Error();\n            return loading ? (\n              <strong>Loading ...</strong>\n            ) : (\n              <>\n                <TableList\n                  careers={data.career}\n                  headers={Naming.TableHeader}\n                  handleChange={this.handleChange}\n                  comparable={this.state.compare.count}\n                />\n                {compareListing}\n              </>\n            );\n          }}\n        </Query>\n      </Container>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// or less ideally\n\nfunction Header({ text }) {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light shadow sticky\">\n      <a className=\"navbar-brand\" href=\"/\">\n        Players Stats\n      </a>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarSupportedContent\"\n        aria-controls=\"navbarSupportedContent\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\" />\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav mr-auto\" />\n      </div>\n    </nav>\n  );\n}\nHeader.defaultProps = {\n  text: \"Login\"\n};\nHeader.propTypes = {\n  text: PropTypes.string\n};\n\nfunction onLogout() {\n  localStorage.removeItem(\"token\");\n  window.location.reload();\n}\nexport default Header;\n","import React from \"react\";\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, info) {\n    // You can also log the error to an error reporting service\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1 data-test=\"ErrorBoundries\">Something went wrong.</h1>;\n    }\n    return this.props.children;\n  }\n}\n","import React from \"react\";\n// import PropTypes from \"prop-types\";\n// import { Button, FormGroup, FormControl, Label } from \"react-bootstrap\";\n// import { Route, Link, BrowserRouter as Router } from 'react-router-dom'\n\n// or less ideally\n// import { Button, Navbar, Container } from \"react-bootstrap\";\n\nfunction Error404(props) {\n  return (\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"xs-12 md-6 mx-auto\">\n          <div id=\"countUp\">\n            <div class=\"number\" data-count=\"404\">\n              404\n            </div>\n            <div class=\"text\">Page not found</div>\n            <div class=\"text\">This may not mean anything.</div>\n            <div class=\"text\">\n              I'm probably working on something that has blown up.\n            </div>\n            <a href=\"/\" style={{ color: \"black\" }}>\n              {\" \"}\n              click here to Go Home\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Error404;\n","import React from \"react\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport ApolloClient from \"apollo-boost\";\nimport { DefaultRoutes } from \"./routes\";\nimport { ErrorBoundries, Error404, Header } from \"./_shared/components\";\n\nconst client = new ApolloClient({\n  uri: \"https://headstart-1.herokuapp.com/graphql\"\n});\n\nfunction App() {\n  const conditionalRoutes = DefaultRoutes.map(({ component, path, exact }) => {\n    return <Route path={path} key={path} component={component} exact={exact} />;\n  });\n\n  return (\n    <div className=\"App\" data-test=\"App\">\n      <ErrorBoundries>\n        <ApolloProvider client={client}>\n          <Header />\n          <Router>\n            <Switch>\n              {conditionalRoutes}\n              <Route component={Error404} />\n            </Switch>\n          </Router>\n        </ApolloProvider>\n      </ErrorBoundries>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./app/app\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render( < App / > , document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}