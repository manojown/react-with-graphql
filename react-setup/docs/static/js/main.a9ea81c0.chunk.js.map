{"version":3,"sources":["app/_shared/constants/key.constants.js","app/_shared/helpers/index.js","app/models/calculator.js","app/calculator/components/keyRow.js","app/calculator/components/result.jsx","app/calculator/pages/index.jsx","app/_shared/components/Header/index.jsx","app/_shared/components/ErrorBoundries/index.jsx","app/App.js","serviceWorker.js","index.js"],"names":["KEYS","PartialKeys","SciMode","Sq","state","result","toBeCalculated","SciModeFunc","sciCacl","SqRoot","Math","sqrt","Close","Clear","DefaultHandler","event","sumOut","toBeEvaluate","preResult","isNaN","length","alert","Object","objectSpread","push","reduce","sum","arguments","undefined","val","currIndex","holdPrevious","nextIndex","parseInt","Calculator","signMode","classCallCheck","this","KeyRow","_ref","keys","onClick","rows","map","value","react_default","a","createElement","Col","className","key","size","variant","Row","data-test","Result","props","_this","possibleConstructorReturn","getPrototypeOf","call","handleClick","asyncToGenerator","regenerator_default","mark","_callee","rawData","wrap","_context","prev","next","t0","setState","abrupt","stop","_x","apply","CalculatorModel","_this2","KeyPad","index","keyRow","sciModeFilter","_this$state","Container","style","width","padding","components_result","React","Component","Header","Navbar","bg","es_Button","ErrorBoundary","hasError","error","info","children","App","_React$useState","useState","_React$useState2","slicedToArray","darkMode","setDarkMode","themeMode","ErrorBoundries_ErrorBoundary","fluid","components_Header","prevMode","pages_Calculator","Boolean","window","location","hostname","match","ReactDOM","render","app_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qSAAaA,EAAO,CAClB,CAAC,EAAG,EAAG,EAAG,KACV,CAAC,EAAG,EAAG,EAAG,KACV,CAAC,EAAG,EAAG,EAAG,KACV,CAAC,QAAS,EAAG,IAAK,MAGPC,EAAc,CAAC,OAAQ,KAAM,SAAU,SAEvCC,EAAU,CAAC,WCUxB,SAASC,EAAGC,GAGV,OAFAA,EAAMC,OAASD,EAAMC,OAASD,EAAMC,OACpCD,EAAME,eAAiB,CAACF,EAAMC,QACvBD,EAST,SAASG,EAAYH,GAEnB,OADAA,EAAMI,SAAWJ,EAAMI,QAChBJ,EAQT,SAASK,EAAOL,GAGd,OAFAA,EAAMC,OAASK,KAAKC,KAAKP,EAAMC,QAC/BD,EAAME,eAAiB,CAACF,EAAMC,QACvBD,EAST,SAASQ,EAAMR,GAEb,OADAA,EAAMI,SAAWJ,EAAMI,QAChBJ,EAST,SAASS,EAAMT,GAGb,OAFAA,EAAMC,OAAS,EACfD,EAAME,eAAiB,GAChBF,EAWT,SAASU,EAAeC,EAAOX,GAC7B,IAAIY,EAoCeC,EAAcC,EAnCjC,OACEC,MAAMJ,KAC2B,IAAhCX,EAAME,eAAec,QACpBD,MAAMf,EAAME,eAAeF,EAAME,eAAec,OAAS,KAEpDC,MAAM,8BAIZF,MAAMf,EAAME,eAAeF,EAAME,eAAec,OAAS,KACzDD,MAAMJ,KAUTC,EAAMM,OAAAC,EAAA,EAAAD,CAAA,GAAQlB,IACPE,eAAekB,KAAKT,GAC3BC,EAAOX,QAaYY,EAbSD,EAAOV,eAaFY,EAbkBF,EAAOX,OAcnDY,EAAaQ,OAAO,WAAqC,IAApCC,EAAoCC,UAAAP,OAAA,QAAAQ,IAAAD,UAAA,GAAAA,UAAA,GAA9BT,EAAWW,EAAmBF,UAAAP,OAAA,EAAAO,UAAA,QAAAC,EAAdE,EAAcH,UAAAP,OAAA,EAAAO,UAAA,QAAAC,EAC1DG,EAAed,EAAaa,EAAY,GACxCE,EAAYF,EAAY,EAE5B,GAAIE,GAAaf,EAAaG,OAAQ,OAAOM,EAI7C,GAFkB,IAAdI,IAAiBJ,GAAOI,EAAY,GAEpCX,MAAMY,GACR,OAAQA,GACN,IAAK,IAEH,OADAL,GAAOG,EAET,IAAK,IAEH,OADAH,GAAOG,EAET,IAAK,IAEH,OADAH,GAAOG,EAET,IAAK,IAEH,OADAH,GAAOG,EAET,IAAK,IAEL,QACE,OAAOH,EAIb,OAAOA,KA1CK,MAAVX,IAAeC,EAAOV,eAAiB,CAACU,EAAOX,SAC5CW,IAZLD,EAAQkB,SACN7B,EAAME,eAAeF,EAAME,eAAec,OAAS,GAAK,GAAKL,IAE/DC,EAAMM,OAAAC,EAAA,EAAAD,CAAA,GAAQlB,IACPE,eAAeF,EAAME,eAAec,OAAS,GAAKL,EAClDC,OCjGLkB,EACJ,SAAAA,IAKE,IAJA5B,EAIAqB,UAAAP,OAAA,QAAAQ,IAAAD,UAAA,GAAAA,UAAA,GAJiB,GACjBtB,EAGAsB,UAAAP,OAAA,QAAAQ,IAAAD,UAAA,GAAAA,UAAA,GAHS,EACTnB,EAEAmB,UAAAP,OAAA,QAAAQ,IAAAD,UAAA,IAAAA,UAAA,GADAQ,EACAR,UAAAP,OAAA,QAAAQ,IAAAD,UAAA,IAAAA,UAAA,GAAAL,OAAAc,EAAA,EAAAd,CAAAe,KAAAH,GACAG,KAAK/B,eAAiBA,EACtB+B,KAAKhC,OAASA,EACdgC,KAAK7B,QAAUA,EACf6B,KAAKF,SAAWA,WCULG,MAlBf,SAAAC,GAA6C,IAA3BC,EAA2BD,EAA3BC,KAAML,EAAqBI,EAArBJ,SAAUM,EAAWF,EAAXE,QAC5BC,EAAOF,EAAKG,IAAI,SAAAC,GAElB,OADIT,IAAUS,EAAQzB,MAAMyB,GAASA,GAASA,GAE5CC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,UAAU,aAAaC,IAAKN,EAAOH,QAAS,kBAAMA,EAAQG,KAC7DC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaE,KAAK,KAAKC,QAAQ,SAC3CR,MAKT,OACEC,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAKJ,UAAU,4BAA4BK,YAAU,mBAClDZ,ICEQa,MAbf,SAAAhB,GAA4C,IAA1BlC,EAA0BkC,EAA1BlC,OAAQC,EAAkBiC,EAAlBjC,eACxB,OACEuC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKM,YAAU,mBACbT,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAKJ,UAAU,kCACbJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,aAAa5C,GAAkB,IAEjDwC,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAKJ,UAAU,kDACZ3C,GAAkC,KCKtB4B,cACnB,SAAAA,EAAYsB,GAAO,IAAAC,EAAA,OAAAnC,OAAAc,EAAA,EAAAd,CAAAe,KAAAH,IACjBuB,EAAAnC,OAAAoC,EAAA,EAAApC,CAAAe,KAAAf,OAAAqC,EAAA,EAAArC,CAAAY,GAAA0B,KAAAvB,KAAMmB,KAIRK,YALmB,eAAAtB,EAAAjB,OAAAwC,EAAA,EAAAxC,CAAAyC,EAAAjB,EAAAkB,KAKL,SAAAC,EAAMlD,GAAN,IAAAmD,EAAA,OAAAH,EAAAjB,EAAAqB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,EAAAG,GAEJxD,EAFIqD,EAAAE,KAGL,SAHKF,EAAAG,GAAA,EAQL,OARKH,EAAAG,GAAA,EAaL,WAbKH,EAAAG,GAAA,EAkBL,UAlBKH,EAAAG,GAAA,GAuBL,YAvBKH,EAAAG,GAAA,GA4BL,UA5BKH,EAAAG,GAAA,0BJdFnE,EIkBSkB,OAAAC,EAAA,EAAAD,CAAA,GAAKmC,EAAKrD,QJjBzB+B,UAAY/B,EAAM+B,SIiBlB+B,EJhBC9D,EIiBDqD,EAAKe,SAALlD,OAAAC,EAAA,EAAAD,CAAA,GAAmB4C,IALXE,EAAAK,OAAA,0BASRP,EAAU/D,EAAGmB,OAAAC,EAAA,EAAAD,CAAA,GAAKmC,EAAKrD,QACvBqD,EAAKe,SAALlD,OAAAC,EAAA,EAAAD,CAAA,GAAmB4C,IAVXE,EAAAK,OAAA,0BAcRP,EAAUzD,EAAOa,OAAAC,EAAA,EAAAD,CAAA,GAAKmC,EAAKrD,QAC3BqD,EAAKe,SAALlD,OAAAC,EAAA,EAAAD,CAAA,GAAmB4C,IAfXE,EAAAK,OAAA,2BAmBRP,EAAUtD,EAAMU,OAAAC,EAAA,EAAAD,CAAA,GAAKmC,EAAKrD,QAC1BqD,EAAKe,SAALlD,OAAAC,EAAA,EAAAD,CAAA,GAAmB4C,IApBXE,EAAAK,OAAA,2BAwBRP,EAAU3D,EAAYe,OAAAC,EAAA,EAAAD,CAAA,GAAKmC,EAAKrD,QAChCqD,EAAKe,SAALlD,OAAAC,EAAA,EAAAD,CAAA,GAAmB4C,IAzBXE,EAAAK,OAAA,2BA6BRP,EAAUrD,EAAMS,OAAAC,EAAA,EAAAD,CAAA,GAAKmC,EAAKrD,QAC1BqD,EAAKe,SAALlD,OAAAC,EAAA,EAAAD,CAAA,GAAmB4C,IA9BXE,EAAAK,OAAA,2BAkCRP,EAAUpD,EAAeC,EAADO,OAAAC,EAAA,EAAAD,CAAA,GAAamC,EAAKrD,QAlClCgE,EAAAE,KAAA,GAmCFb,EAAKe,SAALlD,OAAAC,EAAA,EAAAD,CAAA,GAAmB4C,IAnCjB,yBAAAE,EAAAM,OJdhB,IAActE,GIcE6D,MALK,gBAAAU,GAAA,OAAApC,EAAAqC,MAAAvC,KAAAV,YAAA,GAEjB8B,EAAKrD,MAAQ,IAAIyE,EAFApB,wEA2CV,IAAAqB,EAAAzC,KACD0C,EAAS/E,EAAK2C,IAAI,SAACH,EAAMwC,GAAU,IACjC7C,EAAa2C,EAAK1E,MAAlB+B,SACN,OACEU,EAAAC,EAAAC,cAACkC,EAAD,CACExC,QAASqC,EAAKjB,YACdrB,KAAMA,EACNU,IAAK8B,EACL7C,SAAUA,MAKV+C,EAAgB7C,KAAKjC,MAAMI,QAAUP,EAAcC,EAblDiF,EAc4B9C,KAAKjC,MAAhCC,EAdD8E,EAcC9E,OAAQC,EAdT6E,EAcS7E,eAChB,OACEuC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CACEC,MAAO,CAAEC,MAAO,QAASC,QAAS,MAClCjC,YAAU,uBAEVT,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAKJ,UAAU,YACbJ,EAAAC,EAAAC,cAACyC,EAAD,CAAQnF,OAAQA,EAAQC,eAAgBA,KAEzCyE,EACDlC,EAAAC,EAAAC,cAACkC,EAAD,CAAQxC,QAASJ,KAAKwB,YAAarB,KAAM0C,YApETO,IAAMC,+BCE/BC,MAdf,SAAApD,GAA6B,IAAXE,EAAWF,EAAXE,QAChB,OACEI,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CACEC,GAAG,QACH5C,UAAU,yBACVK,YAAU,mBAEVT,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACbJ,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAQrD,QAASA,GAAjB,iBCXasD,cACnB,SAAAA,EAAYvC,GAAO,IAAAC,EAAA,OAAAnC,OAAAc,EAAA,EAAAd,CAAAe,KAAA0D,IACjBtC,EAAAnC,OAAAoC,EAAA,EAAApC,CAAAe,KAAAf,OAAAqC,EAAA,EAAArC,CAAAyE,GAAAnC,KAAAvB,KAAMmB,KACDpD,MAAQ,CAAE4F,UAAU,GAFRvC,iFAUDwC,EAAOC,qCAKvB,OAAI7D,KAAKjC,MAAM4F,SAENnD,EAAAC,EAAAC,cAAA,mCAGFV,KAAKmB,MAAM2C,4DAfYF,GAE9B,MAAO,CAAED,UAAU,UARoBP,IAAMC,WCmBlCU,MAff,WAAe,IAAAC,EACmBZ,IAAMa,UAAS,GADlCC,EAAAjF,OAAAkF,EAAA,EAAAlF,CAAA+E,EAAA,GACNI,EADMF,EAAA,GACIG,EADJH,EAAA,GAEPI,EAAYF,EAAW,YAAc,aAC3C,OACE5D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAC6D,EAAD,KACE/D,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAWyB,OAAK,EAAC5D,UAAW0D,GAC1B9D,EAAAC,EAAAC,cAAC+D,EAAD,CAAQrE,QAAS,kBAAMiE,EAAY,SAAAK,GAAQ,OAAKA,OAChDlE,EAAAC,EAAAC,cAACiE,EAAD,CAAeL,UAAWA,QCDhBM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO1E,EAAAC,EAAAC,cAACyE,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.a9ea81c0.chunk.js","sourcesContent":["export const KEYS = [\n  [1, 2, 3, \"+\"],\n  [4, 5, 6, \"-\"],\n  [7, 8, 9, \"*\"],\n  [\"Clear\", 0, \"=\", \"/\"]\n];\n\nexport const PartialKeys = [\"Sign\", \"Sq\", \"SqRoot\", \"close\"];\n\nexport const SciMode = [\"SciMode\"];\n","/**\n * Try to split functionality so in future we want to\n * change any things in each funality we can and testing is much esier in it\n **/\n\n/**\n * @param  { Object } state\n */\nfunction Sign(state) {\n  state.signMode = !state.signMode;\n  return state;\n}\n\n/**\n *\n * @description sq of holded value\n * @param { Object } state\n * @returns Modified Object\n */\nfunction Sq(state) {\n  state.result = state.result * state.result;\n  state.toBeCalculated = [state.result];\n  return state;\n}\n\n/**\n *\n * @description To on scientific Mode in calculator\n * @param { Object } state\n * @returns Modified state\n */\nfunction SciModeFunc(state) {\n  state.sciCacl = !state.sciCacl;\n  return state;\n}\n/**\n *\n * @description to find square root of current hold value in state\n * @param { Object } state\n * @returns Modified Object\n */\nfunction SqRoot(state) {\n  state.result = Math.sqrt(state.result);\n  state.toBeCalculated = [state.result];\n  return state;\n}\n\n/**\n *\n * @description To close sci mode in calculator\n * @param { Object } state\n * @returns Modiefied Object\n */\nfunction Close(state) {\n  state.sciCacl = !state.sciCacl;\n  return state;\n}\n\n/**\n *\n * @deprecated to clear all input values with result data\n * @param { Object } state\n * @returns\n */\nfunction Clear(state) {\n  state.result = 0;\n  state.toBeCalculated = [];\n  return state;\n}\n\n/**\n *\n * @description To calculate and evalue value which reside in state\n *  ex - [1,\"+\",2]  evalute to be 3\n * @param { String or Number } event ex - \"=\",\"+\", \"1\" , \"2\" ..etc\n * @param { Object } state\n * @returns Modiefied Object\n */\nfunction DefaultHandler(event, state) {\n  let sumOut;\n  if (\n    isNaN(event) &&\n    (state.toBeCalculated.length === 0 ||\n      isNaN(state.toBeCalculated[state.toBeCalculated.length - 1]))\n  ) {\n    return alert(\"please provide valid input\");\n  }\n\n  if (\n    !isNaN(state.toBeCalculated[state.toBeCalculated.length - 1]) &&\n    !isNaN(event)\n  ) {\n    event = parseInt(\n      state.toBeCalculated[state.toBeCalculated.length - 1] + \"\" + event\n    );\n    sumOut = { ...state };\n    sumOut.toBeCalculated[state.toBeCalculated.length - 1] = event;\n    return sumOut;\n  }\n\n  sumOut = { ...state };\n  sumOut.toBeCalculated.push(event);\n  sumOut.result = Calculation(sumOut.toBeCalculated, sumOut.result);\n  if (event === \"=\") sumOut.toBeCalculated = [sumOut.result];\n  return sumOut;\n}\n\n/**\n *\n * @description calculate and return back the result to DefaultHandler\n * @param {Array} toBeEvaluate  evaluate array which given by @DefaultHandler\n * @param { Number } preResult\n * @returns\n * @depends On { DefaultHandler }\n */\nfunction Calculation(toBeEvaluate, preResult) {\n  return toBeEvaluate.reduce((sum = preResult, val, currIndex) => {\n    let holdPrevious = toBeEvaluate[currIndex - 1];\n    let nextIndex = currIndex + 1;\n\n    if (nextIndex >= toBeEvaluate.length) return sum;\n\n    if (currIndex === 1) sum += currIndex - 1;\n\n    if (isNaN(holdPrevious)) {\n      switch (holdPrevious) {\n        case \"+\":\n          sum += val;\n          return sum;\n        case \"-\":\n          sum -= val;\n          return sum;\n        case \"*\":\n          sum *= val;\n          return sum;\n        case \"/\":\n          sum /= val;\n          return sum;\n        case \"=\":\n          return sum;\n        default:\n          return sum;\n      }\n    }\n\n    return sum;\n  });\n}\n\nexport {\n  Sign,\n  Sq,\n  SciModeFunc,\n  SqRoot,\n  Close,\n  Clear,\n  Calculation,\n  DefaultHandler\n};\n","class Calculator {\n  constructor(\n    toBeCalculated = [],\n    result = 0,\n    sciCacl = false,\n    signMode = false\n  ) {\n    this.toBeCalculated = toBeCalculated;\n    this.result = result;\n    this.sciCacl = sciCacl;\n    this.signMode = signMode;\n  }\n}\n\nexport { Calculator };\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nfunction KeyRow({ keys, signMode, onClick }) {\n  let rows = keys.map(value => {\n    if (signMode) value = isNaN(value) ? value : -value;\n    return (\n      <Col className=\"button-col\" key={value} onClick={() => onClick(value)}>\n        <div className=\"key-button\" size=\"lg\" variant=\"light\">\n          {value}\n        </div>\n      </Col>\n    );\n  });\n  return (\n    <Row className=\"justify-content-md-center\" data-test=\"keyRowComponent\">\n      {rows}\n    </Row>\n  );\n}\n\nexport default KeyRow;\n","import React from \"react\";\n// or less ideally\nimport { Row, Col } from \"react-bootstrap\";\n\nfunction Result({ result, toBeCalculated }) {\n  return (\n    <Col data-test=\"resultComponent\">\n      <Row className=\"justify-content-end text-right\">\n        <span className=\"final-sum\">{result ? result : 0}</span>\n      </Row>\n      <Row className=\"justify-content-end text-right tobe-calculated\">\n        {toBeCalculated ? toBeCalculated : 0}\n      </Row>\n    </Col>\n  );\n}\n\nexport default Result;\n","import React from \"react\";\nimport { Row, Container } from \"react-bootstrap\";\nimport { KEYS, PartialKeys, SciMode } from \"../../_shared/constants\";\nimport {\n  Sign,\n  Sq,\n  SqRoot,\n  Close,\n  SciModeFunc,\n  Clear,\n  DefaultHandler\n} from \"../../_shared/helpers\";\nimport { Calculator as CalculatorModel } from \"../../models/\";\nimport KeyRow from \"../components/keyRow\";\nimport Result from \"../components/result\";\n\nexport default class Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = new CalculatorModel();\n  }\n\n  handleClick = async event => {\n    let rawData;\n    switch (event) {\n      case \"Sign\":\n        rawData = Sign({ ...this.state });\n        this.setState({ ...rawData });\n        break;\n\n      case \"Sq\":\n        rawData = Sq({ ...this.state });\n        this.setState({ ...rawData });\n        break;\n\n      case \"SqRoot\":\n        rawData = SqRoot({ ...this.state });\n        this.setState({ ...rawData });\n        break;\n\n      case \"close\":\n        rawData = Close({ ...this.state });\n        this.setState({ ...rawData });\n        break;\n\n      case \"SciMode\":\n        rawData = SciModeFunc({ ...this.state });\n        this.setState({ ...rawData });\n        break;\n\n      case \"Clear\":\n        rawData = Clear({ ...this.state });\n        this.setState({ ...rawData });\n        break;\n\n      default:\n        rawData = DefaultHandler(event, { ...this.state });\n        await this.setState({ ...rawData });\n    }\n  };\n  render() {\n    const KeyPad = KEYS.map((keys, index) => {\n      let { signMode } = this.state;\n      return (\n        <KeyRow\n          onClick={this.handleClick}\n          keys={keys}\n          key={index}\n          signMode={signMode}\n        />\n      );\n    });\n\n    const sciModeFilter = this.state.sciCacl ? PartialKeys : SciMode;\n    const { result, toBeCalculated } = this.state;\n    return (\n      <Container\n        style={{ width: \"500px\", padding: \"2%\" }}\n        data-test=\"calculatorComponent\"\n      >\n        <Row className=\"row-div \">\n          <Result result={result} toBeCalculated={toBeCalculated} />\n        </Row>\n        {KeyPad}\n        <KeyRow onClick={this.handleClick} keys={sciModeFilter} />\n      </Container>\n    );\n  }\n}\n","import React from \"react\";\n// or less ideally\nimport { Button, Navbar } from \"react-bootstrap\";\n\nfunction Header({ onClick }) {\n  return (\n    <Navbar\n      bg=\"light\"\n      className=\"justify-content-center\"\n      data-test=\"headerComponent\"\n    >\n      <div className=\"toogle-container\">\n        <Button onClick={onClick}>Theme Mode</Button>\n      </div>\n    </Navbar>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, info) {\n    // You can also log the error to an error reporting service\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n\n    return this.props.children;\n  }\n}\n","import React from \"react\";\nimport MainComponent from \"./calculator/pages\";\nimport { Header, ErrorBoundries } from \"./_shared/components\";\nimport { Container } from \"react-bootstrap\";\n\nfunction App() {\n  const [darkMode, setDarkMode] = React.useState(false);\n  const themeMode = darkMode ? \"dark-mode\" : \"light-mode\";\n  return (\n    <div className=\"App\">\n      <ErrorBoundries>\n        <Container fluid className={themeMode}>\n          <Header onClick={() => setDarkMode(prevMode => !prevMode)} />\n          <MainComponent themeMode={themeMode} />\n        </Container>\n      </ErrorBoundries>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}